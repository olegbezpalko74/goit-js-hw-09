{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAGgBC,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,OAAOC,MAAMC,OAC9BC,EAAOJ,OAAOH,EAAEI,OAAOG,KAAKD,OAC5BE,EAASL,OAAOH,EAAEI,OAAOI,OAAOF,OAEpC,GAAIJ,EAAQ,EAEV,YADAO,EAAAd,GAASe,OAAOC,QAAQ,uCAI1B,GAAIJ,GAAQ,EAEV,YADAE,EAAAd,GAASe,OAAOC,QAAQ,+BAI1B,GAAIH,GAAU,EAEZ,YADAC,EAAAd,GAASe,OAAOC,QAAQ,iCAI1B,SAASC,EAAcC,EAAUR,GAC/B,IAAMS,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUR,UAEpBc,EAAO,CAAEN,WAAUR,S,GAEpBA,E,IAIP,IAAK,IAAIgB,EAAW,EAAGA,GAAYb,EAAQa,GAAY,EACrDT,EAAcS,EAAUnB,GACrBoB,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUR,EAAKkB,EAALlB,MACjBmB,EAAAd,OAAOe,QAAQ,qBAAoCC,OAAfb,EAAS,QAAYa,OAANrB,EAAM,M,IAG1DsB,OAAM,SAAAJ,G,IAAGV,EAAQU,EAARV,SAAUR,EAAKkB,EAALlB,MAClBmB,EAAAd,OAAOkB,QAAQ,oBAAmCF,OAAfb,EAAS,QAAYa,OAANrB,EAAM,M,IAE5DH,GAASK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(e.target.delay.value);\n  let step = Number(e.target.step.value);\n  let amount = Number(e.target.amount.value);\n\n  if (delay < 0) {\n    Notiflix.Notify.warning('Delay must be greater or equal to 0');\n    return;\n  }\n\n  if (step <= 0) {\n    Notiflix.Notify.warning('Step must be greater than 0');\n    return;\n  }\n\n  if (amount <= 0) {\n    Notiflix.Notify.warning('Amount must be greater than 0');\n    return;\n  }\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\n\n\n\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","e","preventDefault","delay1","Number","target","delay","value","step","amount","$parcel$interopDefault","Notify","warning","createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position1","then","param","$h6c0i","success","concat","catch","failure"],"version":3,"file":"03-promises.f021deb9.js.map"}